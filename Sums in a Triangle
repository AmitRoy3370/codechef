import java.util.Scanner;
import java.util.Arrays;

class Codechef
{
    
    static Scanner in = new Scanner(System.in);
    
    static int testCases, n;
    
    static long a[][];
    
    static void solve() {
        
        long dp[][] = new long[n + 1][n + 1];
        
        for(int i = 1; i <= n; ++i) {
            
            Arrays.fill(dp[i], Integer.MIN_VALUE);
            
        }
        
        dp[1][1] = a[1][1];
        
        for(int i = 2; i <= n; ++i) {
            
            for(int j = 1; j <= n; ++j) {
                
                dp[i][j] = Math.max(dp[i][j], Math.max(dp[i - 1][j] + a[i][j], dp[i - 1][j - 1] + a[i][j]));
                
            }
            
        }
        
        long max = Integer.MIN_VALUE;
        
        for(int i = 1; i <= n; ++i) {
            
            max = Math.max(max, dp[n][i]);
            
        }
        
        System.out.println(max);
        
    }
    
	public static void main (String[] args) 
	{
		
		testCases = in.nextInt();
		
		for(int t = 0; t < testCases; ++t) {
		    
		    n = in.nextInt();
		    
		    a = new long[n + 1][n + 1];
		    
		    for(int i = 1; i <= n; ++i) {
		        
		        for(int j = 1; j <= i; ++j) {
		            
		            a[i][j] = in.nextLong();
		            
		        }
		        
		    } 
		    
		    solve();
		    
		}
		
	}
	
}
